// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextIndex", "fullTextSearch"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?   @db.Text
  password      String?   @db.Text
  image         File?
  phone         Int?      @db.Int
  gender        String?   @db.Text
  address       String?   @db.Text
  isAdmin       Boolean?  @default(false)
  createdAt     DateTime? @default(now())
  updatedAt     DateTime? @updatedAt
  emailVerified DateTime?
  reviews       Review[]
  accounts      Account[]
  sessions      Session[]
}

model Product {
  id           String   @id @default(cuid())
  name         String   @unique
  category     String?  @db.Text
  discount     Int?
  descriptions String?  @db.LongText
  sizeList     Size[]
  sold         Int?
  slug         String   @unique
  files        File[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  reviews      Review[]
}

model File {
  id        String   @id @default(cuid())
  url       String?
  publicId  String?
  type      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product   Product? @relation(fields: [productId], references: [id], onDelete: Cascade)
  user      User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String? @unique
  productId String?

  @@index([productId])
}

model Review {
  id        String   @id @default(cuid())
  content   String
  point     Int
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  productId String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([productId])
}

model Size {
  id        String   @id @default(cuid())
  name      String?
  price     Int?
  product   Product? @relation(fields: [productId], references: [id], onDelete: Cascade)
  amount    Int?
  productId String?

  @@index([productId])
}
